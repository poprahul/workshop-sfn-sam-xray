# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  nested-workflows
  
  SAM Template to demonstrate nested-workflows

Resources:
################################################################################
# Parent Standard Workflow
################################################################################
  ParentWorkflow:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: Parent
      Role: !GetAtt ParentWorkflowRole.Arn
      DefinitionUri: statemachine/parent.asl.json
      DefinitionSubstitutions:
        FailingChildWorkflowArn: !Ref FailingChildWorkflow
        SucceedingChildWorkflowArn: !Ref StockTradingStateMachine
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup: 
              LogGroupArn: !GetAtt ParentWorkflowLogs.Arn
        IncludeExecutionData: true
        Level: ALL
      Tracing:
        Enabled: True
  
  ParentWorkflowLogs:
    Type: AWS::Logs::LogGroup

################################################################################
# Failing Child Express Workflow
################################################################################

  FailingChildWorkflow:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: Failing-Child
      Type: EXPRESS
      Role: !GetAtt NoOpWorkflowRole.Arn
      DefinitionUri: statemachine/failing-child.asl.json
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup: 
              LogGroupArn: !GetAtt FailingChildWorkflowLogs.Arn
        IncludeExecutionData: true
        Level: ALL
      Tracing:
        Enabled: True

  FailingChildWorkflowLogs:
    Type: AWS::Logs::LogGroup    

################################################################################
# Succeeding Child Express Workflow
################################################################################

  # SucceedingChildWorkflow:
  #   Type: AWS::Serverless::StateMachine
  #   Properties:
  #     Name: Succeeding-Child
  #     Type: STANDARD
  #     # Role: !GetAtt NoOpWorkflowRole.Arn
  #     DefinitionUri: statemachine/succeeding-child.asl.json


################################################################################
# Stock Trading Workflow
################################################################################

  StockTradingStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/stock_trader.asl.json
      DefinitionSubstitutions:
        StockCheckerFunctionArn: !GetAtt StockCheckerFunction.Arn
        StockSellerFunctionArn: !GetAtt StockSellerFunction.Arn
        StockBuyerFunctionArn: !GetAtt StockBuyerFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TransactionTable
      Events:
        HourlyTradingSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the stock trading state machine every hour
            Enabled: False # This schedule is disabled by default to avoid incurring charges.
            Schedule: "rate(1 hour)"
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup: 
              LogGroupArn: !GetAtt StockTradingStateMachineLogs.Arn
        IncludeExecutionData: true
        Level: ALL
      Tracing:
        Enabled: True
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref StockCheckerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref StockSellerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref StockBuyerFunction
        - DynamoDBWritePolicy:
            TableName: !Ref TransactionTable
        - CloudWatchLogsFullAccess
        - AWSXrayFullAccess

  StockTradingStateMachineLogs:
    Type: AWS::Logs::LogGroup

  StockCheckerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/stock_checker/
      Handler: app.lambda_handler
      Runtime: python3.8

  StockSellerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/stock_seller/
      Handler: app.lambda_handler
      Runtime: python3.8

  StockBuyerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/stock_buyer/
      Handler: app.lambda_handler
      Runtime: python3.8

  TransactionTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

################################################################################
# Parent IAM role
################################################################################
  ParentWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ParentWorkflowExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - xray:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource:
                  - !Ref FailingChildWorkflow
                  - !Ref StockTradingStateMachine
              # The following stanzas are required for .sync invocations of workflows
              - Effect: Allow
                Action:
                  - states:DescribeExecution
                  - states:StopExecution
                Resource:
                  - !Ref FailingChildWorkflow
                  - !Ref StockTradingStateMachine
              - Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForStepFunctionsExecutionRule"

################################################################################
# No-op IAM role for child workflows
################################################################################
  NoOpWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: NoPoWorkflowExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - xray:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'

Outputs:
  # StockTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  StockTradingStateMachineArn:
    Description: "Stock Trading State machine ARN"
    Value: !Ref StockTradingStateMachine
  StockTradingStateMachineRoleArn:
    Description: "IAM Role created for Stock Trading State machine based on the specified SAM Policy Templates"
    Value: !GetAtt StockTradingStateMachineRole.Arn
